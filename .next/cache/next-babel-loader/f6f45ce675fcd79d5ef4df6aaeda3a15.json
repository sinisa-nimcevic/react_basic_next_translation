{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { withTranslation } from \"i18n\";\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode;\n  return __jsx(\"p\", null, statusCode ? \"An error \".concat(statusCode, \" occurred on server\") : \"An error occurred on client\");\n};\n\nError.getInitialProps = function _callee(_ref2) {\n  var res, err, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, err = _ref2.err;\n          statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n          return _context.abrupt(\"return\", {\n            namespacesRequired: [\"common\"],\n            statusCode: statusCode\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withTranslation(\"common\")(Error);","map":{"version":3,"sources":["/hdd/projects/react_basic+next+multilingual/pages/_error.js"],"names":["React","withTranslation","Error","statusCode","getInitialProps","res","err","namespacesRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,MAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SAAoB,iBAAIA,UAAU,sBAAeA,UAAf,2BAAiD,6BAA/D,CAApB;AAAA,CAAd;;AAEAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AACjBH,UAAAA,UADiB,GACJE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,GAD1C;AAAA,2CAEf;AACPI,YAAAA,kBAAkB,EAAE,CAAC,QAAD,CADb;AAEPJ,YAAAA,UAAU,EAAVA;AAFO,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeF,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { withTranslation } from \"i18n\";\n\nconst Error = ({ statusCode }) => <p>{statusCode ? `An error ${statusCode} occurred on server` : \"An error occurred on client\"}</p>;\n\nError.getInitialProps = async ({ res, err }) => {\n\tconst statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n\treturn ({\n\t\tnamespacesRequired: [\"common\"],\n\t\tstatusCode\n\t});\n};\n\nexport default withTranslation(\"common\")(Error);\n"]},"metadata":{},"sourceType":"module"}